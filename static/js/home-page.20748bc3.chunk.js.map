{"version":3,"file":"static/js/home-page.20748bc3.chunk.js","mappings":"kJAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAmCzB,KACEC,oBAlCF,WACE,OAAOD,EAAAA,EAAAA,IACA,8DACJE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAO,GAC3C,EA+BEC,kBA7BF,SAA2B,GAAwC,IAAD,IAArCC,YAAAA,OAAW,MAAG,GAAE,MAAEC,YAAAA,OAAW,MAAG,EAAC,EAC5D,OAAOR,EAAAA,EAAAA,IACA,+DAAD,OAC6DQ,EAAW,kBAAUD,IAErFL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAO,GAC3C,EAwBEI,kBAtBF,SAA2BC,GACzB,OAAOV,EAAAA,EAAAA,IACA,UAAD,OAAWU,EAAE,8CAChBR,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAI,GACnC,EAmBEO,eAjBF,SAAwBD,GACtB,OAAOV,EAAAA,EAAAA,IACA,UAAD,OAAWU,EAAE,sDAChBR,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKQ,IAAI,GACxC,EAcEC,kBAZF,SAA2BH,GACzB,OAAOV,EAAAA,EAAAA,IACA,UAAD,OAAWU,EAAE,sDAChBR,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAO,GAC3C,E,8DCpBA,IAXA,SAAoBS,GASlB,OARA,SAAiCC,GAC/B,IAAIC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MAEb,OAAO,SAACP,GAAS,kBAAKC,GAAK,IAAEO,OAAQ,CAAEN,SAAAA,EAAUE,SAAAA,EAAUE,OAAAA,KAC7D,CAGF,C,2ICNMG,EAAQ,qJAGV,OAHU,oCACZC,MAAQ,CACNC,OAAQ,IACT,EAgCA,OAhCA,yCAED,WAAqB,IAAD,OAClBC,EAAAA,EAAAA,sBAEGxB,MAAK,SAAAyB,GACJ,EAAKC,SAAS,CAAEH,QAAO,OAAKE,IAC9B,IACCE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAM,GACtC,GAAC,oBAED,WACE,IAAQL,EAAWQ,KAAKT,MAAhBC,OAER,OACE,gBAAmBS,UAAU,iBAAgB,WAC3C,wBAAI,qCACHT,EAAOU,KAAI,SAAAC,GAAK,OACf,0BACE,yBACE,UAAC,KAAO,CAACC,GAAE,UAAKC,EAAAA,EAAAA,OAAW,YAAIF,EAAM1B,IAAK,WACxC,gBACE6B,IAAG,6CAAwCH,EAAMI,aACjDC,IAAKL,EAAMM,OAASN,EAAMO,QAE5B,0BAAOP,EAAMM,OAASN,EAAMO,WANvBP,EAAM1B,MADPkC,EAAAA,EAAAA,MAUJ,OAbDA,EAAAA,EAAAA,MAiBb,KAAC,EAnCW,CAAS9B,EAAAA,WAsCvB,WAAe+B,EAAAA,EAAAA,GAAWtB,E","sources":["components/Api/api.js","components/Api/props.js","components/HomePageMovies/HomePageMovies.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nfunction fetchTrendingMovies() {\n  return axios\n    .get(`/trending/all/day?api_key=f62fd78ab53293f9591bba159f0c9694`)\n    .then(response => response.data.results);\n}\n\nfunction fetchSearchMovies({ searchQuery = '', currentPage = 1 }) {\n  return axios\n    .get(\n      `/search/multi?api_key=f62fd78ab53293f9591bba159f0c9694&page=${currentPage}&query=${searchQuery}`\n    )\n    .then(response => response.data.results);\n}\n\nfunction fetchDetailsMovie(id) {\n  return axios\n    .get(`/movie/${id}?api_key=f62fd78ab53293f9591bba159f0c9694`)\n    .then(response => response.data);\n}\n\nfunction fetchCastMovie(id) {\n  return axios\n    .get(`/movie/${id}/credits?api_key=f62fd78ab53293f9591bba159f0c9694`)\n    .then(response => response.data.cast);\n}\n\nfunction fetchReviewsMovie(id) {\n  return axios\n    .get(`/movie/${id}/reviews?api_key=f62fd78ab53293f9591bba159f0c9694`)\n    .then(response => response.data.results);\n}\n\n// eslint-disable-next-line\nexport default {\n  fetchTrendingMovies,\n  fetchSearchMovies,\n  fetchDetailsMovie,\n  fetchCastMovie,\n  fetchReviewsMovie,\n};\n","import React from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\n\nfunction withRouter(Component) {\n  function ComponentWithRouterProp(props) {\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n\n    return <Component {...props} router={{ location, navigate, params }} />;\n  }\n\n  return ComponentWithRouterProp;\n}\nexport default withRouter;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport moviesApi from '../Api/api';\nimport withRouter from 'components/Api/props';\nimport rout from '../../routes';\nimport { nanoid } from 'nanoid';\n\nclass HomePage extends Component {\n  state = {\n    movies: [],\n  };\n\n  componentDidMount() {\n    moviesApi\n      .fetchTrendingMovies()\n      .then(popularMoviesOfDay => {\n        this.setState({ movies: [...popularMoviesOfDay] });\n      })\n      .catch(error => console.log(error));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <ul key={nanoid()} className=\"trendingMovies\">\n        <h1>Trending films and serials today</h1>\n        {movies.map(movie => (\n          <div key={nanoid()}>\n            <li key={movie.id}>\n              <NavLink to={`${rout.search}/${movie.id}`}>\n                <img\n                  src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\n                  alt={movie.title || movie.name}\n                ></img>\n                <span>{movie.title || movie.name}</span>\n              </NavLink>\n            </li>\n          </div>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default withRouter(HomePage);\n"],"names":["axios","fetchTrendingMovies","then","response","data","results","fetchSearchMovies","searchQuery","currentPage","fetchDetailsMovie","id","fetchCastMovie","cast","fetchReviewsMovie","Component","props","location","useLocation","navigate","useNavigate","params","useParams","router","HomePage","state","movies","moviesApi","popularMoviesOfDay","setState","catch","error","console","log","this","className","map","movie","to","rout","src","poster_path","alt","title","name","nanoid","withRouter"],"sourceRoot":""}