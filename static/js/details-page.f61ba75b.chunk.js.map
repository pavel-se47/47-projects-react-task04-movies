{"version":3,"file":"static/js/details-page.f61ba75b.chunk.js","mappings":"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","sources":["components/Api/api.js","components/Api/props.js","components/CastMoviePage/CastMoviePage.js","components/ReviewsMoviePage/ReviewsMoviePage.js","components/DetailsPageMovie/DetailsPageMovie.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nfunction fetchTrendingMovies() {\n  return axios\n    .get(`/trending/all/day?api_key=f62fd78ab53293f9591bba159f0c9694`)\n    .then(response => response.data.results);\n}\n\nfunction fetchSearchMovies({ searchQuery = '', currentPage = 1 }) {\n  return axios\n    .get(\n      `/search/multi?api_key=f62fd78ab53293f9591bba159f0c9694&page=${currentPage}&query=${searchQuery}`\n    )\n    .then(response => response.data.results);\n}\n\nfunction fetchDetailsMovie(id) {\n  return axios\n    .get(`/movie/${id}?api_key=f62fd78ab53293f9591bba159f0c9694`)\n    .then(response => response.data);\n}\n\nfunction fetchCastMovie(id) {\n  return axios\n    .get(`/movie/${id}/credits?api_key=f62fd78ab53293f9591bba159f0c9694`)\n    .then(response => response.data.cast);\n}\n\nfunction fetchReviewsMovie(id) {\n  return axios\n    .get(`/movie/${id}/reviews?api_key=f62fd78ab53293f9591bba159f0c9694`)\n    .then(response => response.data.results);\n}\n\n// eslint-disable-next-line\nexport default {\n  fetchTrendingMovies,\n  fetchSearchMovies,\n  fetchDetailsMovie,\n  fetchCastMovie,\n  fetchReviewsMovie,\n};\n","import React from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\n\nfunction withRouter(Component) {\n  function ComponentWithRouterProp(props) {\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n\n    return <Component {...props} router={{ location, navigate, params }} />;\n  }\n\n  return ComponentWithRouterProp;\n}\nexport default withRouter;\n","import React, { Component } from 'react';\nimport withRouter from 'components/Api/props';\nimport moviesApi from 'components/Api/api';\n\nclass CastMoviePage extends Component {\n  state = {\n    cast: [],\n  };\n\n  componentDidMount() {\n    moviesApi\n      .fetchCastMovie(this.props.router.params.movieId)\n      .then(castMovie => this.setState({ cast: [...castMovie] }));\n  }\n\n  render() {\n    const { cast } = this.state;\n    return (\n      <div className=\"castMovie\">\n        <ul>\n          {cast.map(actor => (\n            <li key={actor.name}>\n              <img\n                src={`https://image.tmdb.org/t/p/original${actor.profile_path}`}\n                alt={actor.name}\n              ></img>\n              <p>Actor name: {actor.name}</p>\n              <p>Character of: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CastMoviePage);\n","import React, { Component } from 'react';\nimport withRouter from 'components/Api/props';\nimport moviesApi from 'components/Api/api';\n\nclass ReviewsMoviePage extends Component {\n  state = {\n    reviews: [],\n  };\n\n  componentDidMount() {\n    moviesApi\n      .fetchReviewsMovie(this.props.router.params.movieId)\n      .then(reviewsMovie => this.setState({ reviews: [...reviewsMovie] }));\n  }\n\n  render() {\n    console.log(this.state.reviews);\n\n    const { reviews } = this.state;\n    return (\n      <div>\n        {reviews.length > 0 ? (\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h4>{review.author}:</h4> <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <ul>\n            <li>\n              <h4>No reviews</h4>\n            </li>\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ReviewsMoviePage);\n","import { Component } from 'react';\nimport { Routes, Route, NavLink } from 'react-router-dom';\nimport withRouter from 'components/Api/props';\nimport moviesApi from '../Api/api';\nimport Cast from 'components/CastMoviePage/CastMoviePage';\nimport Reviews from 'components/ReviewsMoviePage/ReviewsMoviePage';\nimport rout from '../../routes';\nimport { nanoid } from 'nanoid';\n\nclass DetailsPage extends Component {\n  state = {\n    poster_path: null,\n    title: null,\n    release_date: null,\n    vote_average: null,\n    overview: null,\n    genres: null,\n  };\n\n  componentDidMount() {\n    moviesApi\n      .fetchDetailsMovie(this.props.router.params.movieId)\n      .then(detailsMovie => this.setState({ ...detailsMovie }));\n  }\n\n  return = () => {\n    const { navigate } = this.props.router;\n    navigate(-1);\n  };\n\n  render() {\n    const { poster_path, title, release_date, vote_average, overview, genres } =\n      this.state;\n\n    return (\n      <>\n        {this.state.poster_path !== null && (\n          <>\n            <div className=\"movieDetails\">\n              <button type=\"button\" onClick={this.return}>\n                Go back\n              </button>\n              <ul>\n                <img\n                  src={`https://image.tmdb.org/t/p/original${poster_path}`}\n                  alt={title}\n                ></img>\n                <li>\n                  <h3>{title}</h3> <p>{release_date}</p>\n                  <h3>User Score:</h3> <p>{vote_average}/10</p>\n                  <h3>Overview:</h3> <p>{overview}</p>\n                </li>\n              </ul>\n              <ul>\n                <h3>Genres:</h3>\n                {genres ? (\n                  genres.map(genre => <li key={nanoid()}>{genre.name}</li>)\n                ) : (\n                  <h4>This movie has no genre</h4>\n                )}\n              </ul>\n              <h2>Additional info</h2>\n              <div className=\"additional\">\n                <NavLink to={`${`cast`}`} className=\"additional__link\">\n                  Cast\n                </NavLink>\n                <NavLink to={`${`reviews`}`} className=\"additional__link\">\n                  Reviews\n                </NavLink>\n              </div>\n            </div>\n\n            <Routes>\n              <Route path={rout.cast} element={<Cast />} />\n              <Route path={rout.rev} element={<Reviews />} />\n            </Routes>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(DetailsPage);\n"],"names":["axios","fetchTrendingMovies","then","response","data","results","fetchSearchMovies","searchQuery","currentPage","fetchDetailsMovie","id","fetchCastMovie","cast","fetchReviewsMovie","Component","props","location","useLocation","navigate","useNavigate","params","useParams","router","CastMoviePage","state","moviesApi","this","movieId","castMovie","setState","className","map","actor","src","profile_path","alt","name","character","withRouter","ReviewsMoviePage","reviews","reviewsMovie","console","log","length","review","author","content","DetailsPage","poster_path","title","release_date","vote_average","overview","genres","return","detailsMovie","type","onClick","genre","nanoid","to","path","rout","element"],"sourceRoot":""}